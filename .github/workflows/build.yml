name: Build and Release

on:
  push:
    tags: ['v*']
    branches: ['main']
  workflow_dispatch:

jobs:
  build-and-release:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            platform: linux
            executable: media-seal
            archive_cmd: "tar -czf"
            archive_ext: "tar.gz"
          - os: windows-latest
            platform: windows
            executable: media-seal.exe
            archive_cmd: "7z a"
            archive_ext: "zip"
          - os: macos-latest
            platform: macos
            executable: media-seal
            archive_cmd: "tar -czf"
            archive_ext: "tar.gz"
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"
    
    - name: Install uv
      uses: astral-sh/setup-uv@v3
    
    - name: Install system dependencies (Ubuntu)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update 
        sudo apt-get install -y libsndfile1 ffmpeg upx-ucl
    
    - name: Install system dependencies (macOS)
      if: matrix.os == 'macos-latest'
      run: brew install ffmpeg
    
    - name: Install system dependencies (Windows)
      if: matrix.os == 'windows-latest'
      run: choco install ffmpeg
    
    - name: Install dependencies and build
      run: |
        uv sync
        if [ "${{ matrix.os }}" = "ubuntu-latest" ]; then
          echo "üêß ‰ΩøÁî®Linux‰ºòÂåñÈÖçÁΩÆÊûÑÂª∫..."
          uv run pyinstaller --clean --noconfirm build-linux.spec
        else
          echo "üñ•Ô∏è ‰ΩøÁî®Ê†áÂáÜÈÖçÁΩÆÊûÑÂª∫..."
          uv run pyinstaller --clean --noconfirm build.spec
        fi
      shell: bash
    
    - name: Create archive
      run: |
        if [ "${{ matrix.os }}" = "windows-latest" ]; then
          7z a media-seal-${{ matrix.platform }}.${{ matrix.archive_ext }} ./dist/${{ matrix.executable }}
        else
          tar -czf media-seal-${{ matrix.platform }}.${{ matrix.archive_ext }} -C dist ${{ matrix.executable }}
        fi
      shell: bash
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: media-seal-${{ matrix.platform }}
        path: media-seal-${{ matrix.platform }}.${{ matrix.archive_ext }}
        retention-days: 30
    
    - name: Upload to Release (only on tag push)
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v1
      with:
        files: media-seal-${{ matrix.platform }}.${{ matrix.archive_ext }}
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}