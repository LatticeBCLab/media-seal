name: Build and Release

on:
  push:
    tags: ['v*']
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            platform: linux
          - os: windows-latest
            platform: windows
          - os: macos-latest
            platform: macos
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"
    
    - name: Install uv
      uses: astral-sh/setup-uv@v3
    
    - name: Install system dependencies (Ubuntu)
      if: matrix.os == 'ubuntu-latest'
      run: sudo apt-get update && sudo apt-get install -y libsndfile1 ffmpeg portaudio19-dev
    
    - name: Install system dependencies (macOS)
      if: matrix.os == 'macos-latest'
      run: brew install ffmpeg portaudio
    
    - name: Install system dependencies (Windows)
      if: matrix.os == 'windows-latest'
      run: choco install ffmpeg
    
    - name: Install dependencies and build
      run: |
        uv sync || python setup.py
        uv add pyinstaller --dev || pip install pyinstaller
        pyinstaller --clean --noconfirm build.spec
      shell: bash
    
    - name: Create archive
      run: |
        if [ "${{ matrix.os }}" = "windows-latest" ]; then
          7z a media-seal-${{ matrix.platform }}.zip ./dist/media-seal.exe
        else
          tar -czf media-seal-${{ matrix.platform }}.tar.gz -C dist media-seal
        fi
      shell: bash
    
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: media-seal-${{ matrix.platform }}
        path: media-seal-${{ matrix.platform }}.*

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts
    
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: artifacts/**/*
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}